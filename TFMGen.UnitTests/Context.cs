using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using TFMGen.ApplicationCore.CEN.TFM;
using TFMGen.ApplicationCore.CP.TFM;
using TFMGen.Infraestructure.CP;
using TFMGen.Infraestructure.Repository.TFM;
using TFMGen.Infraestructure.Repository;

namespace TFMGen.UnitTests
{
    public class Gestor
    {
        public UsuarioRepository usuariorepository;
        public UsuarioCEN usuariocen;
        public ReservaRepository reservarepository;
        public ReservaCEN reservacen;
        public PistaRepository pistarepository;
        public PistaCEN pistacen;
        public AsitenciaRepository asitenciarepository;
        public AsitenciaCEN asitenciacen;
        public NotificacionRepository notificacionrepository;
        public NotificacionCEN notificacioncen;
        public RolRepository rolrepository;
        public RolCEN rolcen;
        public EntidadRepository entidadrepository;
        public EntidadCEN entidadcen;
        public InstalacionRepository instalacionrepository;
        public InstalacionCEN instalacioncen;
        public MaterialRepository materialrepository;
        public MaterialCEN materialcen;
        public PistaEstadoRepository pistaestadorepository;
        public PistaEstadoCEN pistaestadocen;
        public ValoracionRepository valoracionrepository;
        public ValoracionCEN valoracioncen;
        public PagoRepository pagorepository;
        public PagoCEN pagocen;
        public PagoTipoRepository pagotiporepository;
        public PagoTipoCEN pagotipocen;
        public IdiomaRepository idiomarepository;
        public IdiomaCEN idiomacen;
        public DeporteRepository deporterepository;
        public DeporteCEN deportecen;
        public HorarioRepository horariorepository;
        public HorarioCEN horariocen;
        public PistaEstado_l10nRepository pistaestado_l10nrepository;
        public PistaEstado_l10nCEN pistaestado_l10ncen;
        public Deporte_l10nRepository deporte_l10nrepository;
        public Deporte_l10nCEN deporte_l10ncen;
        public Rol_l10nRepository rol_l10nrepository;
        public Rol_l10nCEN rol_l10ncen;
        public PagoTipo_l10nRepository pagotipo_l10nrepository;
        public PagoTipo_l10nCEN pagotipo_l10ncen;
        public DiaSemanaRepository diasemanarepository;
        public DiaSemanaCEN diasemanacen;
        public DiaSemana_l10nRepository diasemana_l10nrepository;
        public DiaSemana_l10nCEN diasemana_l10ncen;
        public EventoRepository eventorepository;
        public EventoCEN eventocen;
        public IncidenciaRepository incidenciarepository;
        public IncidenciaCEN incidenciacen;

        public SessionCPNHibernate session = new SessionCPNHibernate();
        public UnitOfWorkRepository unitRep;
        public UsuarioCP usuariocp;
        public ReservaCP reservacp;
        public PistaCP pistacp;
        public AsitenciaCP asitenciacp;
        public NotificacionCP notificacioncp;
        public RolCP rolcp;
        public EntidadCP entidadcp;
        public InstalacionCP instalacioncp;
        public MaterialCP materialcp;
        public PistaEstadoCP pistaestadocp;
        public ValoracionCP valoracioncp;
        public PagoCP pagocp;
        public PagoTipoCP pagotipocp;
        public IdiomaCP idiomacp;
        public DeporteCP deportecp;
        public HorarioCP horariocp;
        public PistaEstado_l10nCP pistaestado_l10ncp;
        public Deporte_l10nCP deporte_l10ncp;
        public Rol_l10nCP rol_l10ncp;
        public PagoTipo_l10nCP pagotipo_l10ncp;
        public DiaSemanaCP diasemanacp;
        public DiaSemana_l10nCP diasemana_l10ncp;
        public EventoCP eventocp;
        public IncidenciaCP incidenciacp;

        public Gestor()
        {
            usuariorepository = new UsuarioRepository();
            usuariocen = new UsuarioCEN(usuariorepository);
            reservarepository = new ReservaRepository();
            reservacen = new ReservaCEN(reservarepository);
            pistarepository = new PistaRepository();
            pistacen = new PistaCEN(pistarepository);
            asitenciarepository = new AsitenciaRepository();
            asitenciacen = new AsitenciaCEN(asitenciarepository);
            notificacionrepository = new NotificacionRepository();
            notificacioncen = new NotificacionCEN(notificacionrepository);
            rolrepository = new RolRepository();
            rolcen = new RolCEN(rolrepository);
            entidadrepository = new EntidadRepository();
            entidadcen = new EntidadCEN(entidadrepository);
            instalacionrepository = new InstalacionRepository();
            instalacioncen = new InstalacionCEN(instalacionrepository);
            materialrepository = new MaterialRepository();
            materialcen = new MaterialCEN(materialrepository);
            pistaestadorepository = new PistaEstadoRepository();
            pistaestadocen = new PistaEstadoCEN(pistaestadorepository);
            valoracionrepository = new ValoracionRepository();
            valoracioncen = new ValoracionCEN(valoracionrepository);
            pagorepository = new PagoRepository();
            pagocen = new PagoCEN(pagorepository);
            pagotiporepository = new PagoTipoRepository();
            pagotipocen = new PagoTipoCEN(pagotiporepository);
            idiomarepository = new IdiomaRepository();
            idiomacen = new IdiomaCEN(idiomarepository);
            deporterepository = new DeporteRepository();
            deportecen = new DeporteCEN(deporterepository);
            horariorepository = new HorarioRepository();
            horariocen = new HorarioCEN(horariorepository);
            pistaestado_l10nrepository = new PistaEstado_l10nRepository();
            pistaestado_l10ncen = new PistaEstado_l10nCEN(pistaestado_l10nrepository);
            deporte_l10nrepository = new Deporte_l10nRepository();
            deporte_l10ncen = new Deporte_l10nCEN(deporte_l10nrepository);
            rol_l10nrepository = new Rol_l10nRepository();
            rol_l10ncen = new Rol_l10nCEN(rol_l10nrepository);
            pagotipo_l10nrepository = new PagoTipo_l10nRepository();
            pagotipo_l10ncen = new PagoTipo_l10nCEN(pagotipo_l10nrepository);
            diasemanarepository = new DiaSemanaRepository();
            diasemanacen = new DiaSemanaCEN(diasemanarepository);
            diasemana_l10nrepository = new DiaSemana_l10nRepository();
            diasemana_l10ncen = new DiaSemana_l10nCEN(diasemana_l10nrepository);
            eventorepository = new EventoRepository();
            eventocen = new EventoCEN(eventorepository);
            incidenciarepository = new IncidenciaRepository();
            incidenciacen = new IncidenciaCEN(incidenciarepository);

            // Initialising  CPs
            session = new SessionCPNHibernate();
            unitRep = new UnitOfWorkRepository(session);
            usuariocp = new UsuarioCP(session, unitRep);
            reservacp = new ReservaCP(session, unitRep);
            pistacp = new PistaCP(session, unitRep);
            asitenciacp = new AsitenciaCP(session, unitRep);
            notificacioncp = new NotificacionCP(session, unitRep);
            rolcp = new RolCP(session, unitRep);
            entidadcp = new EntidadCP(session, unitRep);
            instalacioncp = new InstalacionCP(session, unitRep);
            materialcp = new MaterialCP(session, unitRep);
            pistaestadocp = new PistaEstadoCP(session, unitRep);
            valoracioncp = new ValoracionCP(session, unitRep);
            pagocp = new PagoCP(session, unitRep);
            pagotipocp = new PagoTipoCP(session, unitRep);
            idiomacp = new IdiomaCP(session, unitRep);
            deportecp = new DeporteCP(session, unitRep);
            horariocp = new HorarioCP(session, unitRep);
            pistaestado_l10ncp = new PistaEstado_l10nCP(session, unitRep);
            deporte_l10ncp = new Deporte_l10nCP(session, unitRep);
            rol_l10ncp = new Rol_l10nCP(session, unitRep);
            pagotipo_l10ncp = new PagoTipo_l10nCP(session, unitRep);
            diasemanacp = new DiaSemanaCP(session, unitRep);
            diasemana_l10ncp = new DiaSemana_l10nCP(session, unitRep);
            eventocp = new EventoCP(session, unitRep);
            incidenciacp = new IncidenciaCP(session, unitRep);
        }
    }
}
